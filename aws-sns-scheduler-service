#!/bin/sh
### BEGIN INIT INFO
# Provides:          aws-sns-scheduler
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       aws-sns-scheduler-service
### END INIT INFO

NAME="aws-sns-scheduler"
SCRIPT_PATH="/home/scheduler/aws-sns-scheduler"
SCRIPT="/home/scheduler/env/bin/python main.py"
RUNAS=scheduler

PIDFILE="/home/scheduler/tmp/$NAME.pid"
LOGFILE="/home/scheduler/tmp/$NAME.log"

start() {
    if [ -f "$PIDFILE" ] && kill -0 $(cat "$PIDFILE"); then
        echo 'Service already running' >&2
        return 1
    fi
    echo 'Starting service…' >&2
    touch $LOGFILE
    chown $RUNAS:$RUNAS $LOGFILE
    chmod 777 $LOGFILE
    local CMD="$SCRIPT &> \"$LOGFILE\" & echo \$!"
    runuser -l $RUNAS -c "cd $SCRIPT_PATH; $CMD" > $PIDFILE
    echo 'Service started' >&2
}

stop() {
    if [ ! -f "$PIDFILE" ] || ! kill -0 $(cat "$PIDFILE"); then
        echo 'Service not running' >&2
        return 1
    fi
    echo 'Stopping service…' >&2
    kill -15 $(cat "$PIDFILE") && rm -f "$PIDFILE"
    echo 'Service stopped' >&2
}

status() {
    if [ -f "$PIDFILE" ] && kill -0 $(cat "$PIDFILE"); then
        echo 'Service running' >&2
        return 0
    fi
    echo 'Service not running' >&2
    return 1
}

uninstall() {
    echo -n "Are you really sure you want to uninstall this service? That cannot be undone. [yes|No] "
    local SURE
    read SURE
    if [ "$SURE" = "yes" ]; then
        stop
        rm -f "$PIDFILE"
        echo "Notice: log file is not be removed: '$LOGFILE'" >&2
        update-rc.d -f <NAME> remove
        rm -fv "$0"
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    uninstall)
        uninstall
        ;;
    restart)
        stop
        start
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|uninstall}"
esac
